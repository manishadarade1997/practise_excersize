name: Deployment Workflow2
on: push
jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3 # Check out the repository code

        - name: Install ESLint globally
          run: npm install -g eslint # Install ESLint globally

    test:
        needs: lint # Ensure linting is done before testing
        runs-on: ubuntu-latest  
        steps:
        - name: Checkout code
          uses: actions/checkout@v3 # Check out the repository code

        - name: Install NodeJS
          uses: actions/setup-node@v3
          with:
            node-version: '18'
        
        - name: Cache dependencies
          # Cache node_modules to speed up subsequent runs
          uses: actions/cache@v3
          with: 
            path: ~/.npm # Cache npm dependencies
            key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} # Cache key based on package-lock.json

        - name: Install dependencies
          run: npm install # Install dependencies using npm

        - name: Fix Cypress binary permissions (if needed)
          run: chmod +x ./node_modules/.bin/cypress # Ensure Cypress binary has execute permissions
        
        - name: Install Cypress binary
          run: npx cypress install # Install Cypress binary

        - name: Verify Cypress install
          run: npx cypress verify # Verify Cypress installation

        - name: Run cypress tests
          run: npx cypress run # Run tests to ensure code correctness
    
    build:
        needs: test # Ensure tests are successful before building
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3 # Check out the repository code

        - name: Cache dependencies
          # Cache node_modules to speed up subsequent runs
          uses: actions/cache@v3
          with: 
            path: ~/.npm # Cache npm dependencies
            key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} # Cache key based on package-lock.json
        

        - name: install dependencies
          run: npm install # Install dependencies using npm

        - name: Fix Vite binary permissions (if needed)
          run: chmod +x ./node_modules/.bin/vite || true # Ensure Vite binary has execute permissions
        
        - name: Build project
          run: npm run build # Build the project using npm script

        - name: upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: dist-files # Name of the artifact to be uploaded
            path: dist # Upload the build artifacts to be used in the deployment step
            # If you want to upload specific files or directories, you can specify them like this:
            # path: |
            #   dist
            #   dist/my-own-artifacts/*

    deploy:
        needs: build # Ensure tests are successful before deployment
        runs-on: ubuntu-latest
        steps:
        - name: download artifacts
          uses: actions/download-artifact@v4
          with:
            name: dist-files # Download the artifacts from the previous step
        - name: Deploy to production
          run: echo "Deploying to production..." # Placeholder for deployment step

